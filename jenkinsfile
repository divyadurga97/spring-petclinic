node {
  
  stage('GIT CheckOut') {
    git 'https://github.com/ruchi672/projectRepository.git'
  }

  stage('Maven-Clean') {
    sh label: '', script: 'mvn clean'
  }

  stage('Maven-Compile') {
    sh label: '', script: 'mvn compile'
  }
  
  stage('Maven-Test') {
    sh label: '', script: 'mvn test'
  }


 stage('Sonar Analysis') {
   withSonarQubeEnv('sonar') {
        sh "mvn sonar:sonar"
    }
  }
  stage("Quality Gate"){
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
              }

      }
  
  stage('Maven-Package') {
    sh label: '', script: 'mvn package'
  }

   

   stage('Jfrog Artifacory Upload') {
        def server= Artifactory.server 'artifactory'
                    def uploadSpec= """{
                        "files": [{
                        "pattern": "target/*.war",
                        "target": "capstoneproject"}]
                    }"""
        server.upload(uploadSpec)
        
        }
        
        
  stage('Download package from JFrog') {
            def server= Artifactory.server 'artifactory'
            def downloadSpec = """{
            "files": [
            {
                "pattern": "capstoneproject/capstoneproject-0.0.1-SNAPSHOT.war",
                "target": "./capstoneproject.war"
            }
            ]
            }"""
        server.download(downloadSpec)
    }
        
}
